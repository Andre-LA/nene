local Nene = require 'nene'
local Color = require 'nene.color'
local Audio = require 'nene.audio'

local function audio_and_music()
  -- nene initialization and deferred de-initialization with to-be-closed variable
  local ok, nene <close> = Nene.init('nene audio and music', 128, 128)
  assert(ok, 'error: nene initialization failed')

  -- sound and music loading and deferred destroyment
  local ok, click <close> = Audio.Sound.load('resources/pixelclick.wav')
  assert(ok, 'could not load pixelclick sound')
  local ok, bossa <close> = Audio.Music.load('resources/8bit Bossa.ogg')
  assert(ok, 'could not load 8bit Bossa music')

  bossa:play()

  repeat
    nene:poll_events()

    if nene:get_scancode(SDL_SCANCODE_SPACE, true) or nene:get_mouse_button(0, true) then
      click:play()
    end

    nene:render_clear(Color.Palette.bg)

    nene:render_present()
  until nene.quit
end

audio_and_music()
