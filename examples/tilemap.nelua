-- this example shows how to use the tilemap module to make basic tilemap based maps

local Nene = require 'nene'
local Color = require 'nene.color'
local Texture = require 'nene.texture'
local Tilemap = require 'nene.tilemap'

local function game()
  local ok, nene <close> = Nene.init('nene tilemap', 550, 260)
  assert(ok, 'error: nene initialization failed')

  local ok, tileset <close> = Texture.load('resources/img_shapes.png')
  assert(ok, "error: 'img_shapes.png' could not be loaded")

  local tilemap: Tilemap <close> = {
    tilemap_width = 16,
    tileset_width = 2,

    grid = { cell_size = { 32, 32 } },
    map = { -- note: map is a `vector`, thus, it will allocate memory dinamically
    --0                   1
    --0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6   height
      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, -- 1
      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, -- 2
      3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0, -- 3
      2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,2, -- 4
      2,2,3,0,0,0,0,0,0,0,0,0,0,0,2,2, -- 5
      2,2,2,2,2,2,4,4,4,4,4,2,2,2,2,2, -- 6
      2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2, -- 7
    }
  }

  print('tilemap height of this is:', tilemap:get_height())

  repeat
    nene:poll_events()

    nene:render_clear(Color.Palette.bg)

    tilemap:draw(tileset, {20,20})

    nene:render_present()
  until nene.quit
end

game()
