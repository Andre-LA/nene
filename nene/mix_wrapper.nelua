require 'sdl2'
require 'sdl2_mixer'
require 'nene.core'

global Nene.MixWrapper = @record{}

--- Wrapper of `Mix_Init`
---
--- Initialize SDL_mixer loading support.
--- This function doesn't check if `Nene` is initialized.
---
--- It returns an `ok` (boolean) success status and the bitmask that `Mix_Init` returns.
--- The `ok` status is true when the bitmask returned by `Mix_Init` is equals to `flags` argument.
---
--- Related SDL_ttf documentation:
--- * [Mix_Init](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_9.html)
function Nene.MixWrapper.mix_init(flags: cint): (boolean, cint)
  local mix_result = Mix_Init(flags)
  local ok = mix_result & flags ~= flags

  if not ok then
    ## Nene.macros.fn_warn_mix_error('Nene.MixWrapper.mix_init', "SDL_mixer loading support wasn't initialized as expected'")
  end

  return ok, mix_result
end

--- Wrapper of `Mix_Quit`
---
--- Shutdown and cleanup SDL_mixer loading support.
--- This function will call `Mix_Quit` _n_ times until `Mix_Init(0)` returns non-zero.
---
--- Related SDL documentation:
--- * [Mix_Quit](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_10.html)
function Nene.MixWrapper.mix_quit()
  check(Nene.initialized, 'Nene is not initialized')
  while Mix_Init(0) ~= 0 do
    Mix_Quit()
  end
end

-- [[ Mix_Chunk related functions [[

--- Wrapper of `Mix_OpenAudio`
---
--- Initialize SDL_mixer library.
--- This function doesn't check if `Nene` is initialized.
---
--- Related SDL_ttf documentation:
--- * [Mix_OpenAudio](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_11.html)
function Nene.MixWrapper.open_audio(frequency: cint, format: uint16, channels: cint, chunksize: cint): boolean
    local ok = Mix_OpenAudio(frequency, format, channels, chunksize)

  if not ok then
    ## Nene.macros.fn_warn_mix_error('Nene.MixWrapper.open_audio', "could not initialize SDL_mixer")
  end

  return ok
end

--- Wrapper of `Mix_CloseAudio`
---
--- Shutdown and cleanup SDL_mixer library.
---
--- Related SDL documentation:
--- * [Mix_CloseAudio](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_12.html)
function Nene.MixWrapper.close_audio()
  check(Nene.initialized, 'Nene is not initialized')
  Mix_CloseAudio()
end

--- Wrapper of `Mix_PlayChannel`
---
--- Play a `chunk` on a `channel` (when `-1`, it will use the first free channel)
--- It will play `loop` + 1 times (pass `-1` to loop infinitely).
---
--- Related SDL_mixer documentation:
--- * [Mix_PlayChannel](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_28.html#SEC28)
--- * [Mix_Chunk](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_85.html#SEC85)
function Nene.MixWrapper.play_channel(channel: cint, chunk: *Mix_Chunk, loop: cint): (cint, boolean)
  check(Nene.initialized, 'Nene is not initialized')
  check(chunk, 'chunk is nilptr')

  local channel = Mix_PlayChannel(channel, chunk, loop)
  local ok = channel ~= -1

  if not ok then
    ## Nene.macros.fn_warn_mix_error('Nene.MixWrapper.play_channel', 'could not play the chunk on the channel')
  end

  return channel, ok
end

--- Wrapper of `Mix_HaltChannel`
---
--- Stops the playing `channel`, if `-1` is passed, then it halts all channels.
---
--- Related SDL_mixer documentation:
--- * [Mix_HaltChannel](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_34.html#SEC34)
--- * [Mix_Chunk](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_85.html#SEC85)
function Nene.MixWrapper.halt_channel(channel: cint)
  check(Nene.initialized, 'Nene is not initialized')
  Mix_HaltChannel(channel)
end

--- Wrapper of `Mix_FreeChunk`
---
--- Stops the playing `channel`, if `-1` is passed, then it halts all channels.
---
--- Related SDL_mixer documentation:
--- * [Mix_FreeChunk](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_24.html#SEC24)
--- * [Mix_Chunk](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_85.html#SEC85)
function Nene.MixWrapper.free_chunk(chunk: *Mix_Chunk)
  check(Nene.initialized, 'Nene is not initialized')
  check(chunk, 'chunk is nilptr')
  Mix_FreeChunk(chunk)
end

-- ]] Mix_Chunk related functions ]]

-- [[ Mix_Music related functions [[

--- Wrapper of `Mix_FreeMusic`
---
--- Free the music memory.
---
--- Related SDL_mixer documentation:
--- * [Mix_FreeMusic](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_56.html#SEC56)
--- * [Mix_Music](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_86.html#SEC86)
function Nene.MixWrapper.free_music(music: *Mix_Music)
  check(Nene.initialized, 'Nene is not initialized')
  check(music, 'music is nilptr')
  Mix_FreeMusic(music)
end

-- ]] Mix_Music related functions ]]
