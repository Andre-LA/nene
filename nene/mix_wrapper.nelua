require 'sdl2'
require 'sdl2_mixer'

require 'nene.colors'
require 'nene.core'

global Nene.MixWrapper = @record{}

-- [[ Mix_Chunk related functions [[

--- Wrapper of `Mix_PlayChannel`
---
--- Play a `chunk` on a `channel` (when `-1`, it will use the first free channel)
--- It will play `loop` + 1 times (pass `-1` to loop infinitely).
---
--- Related SDL_mixer documentation:
--- * [Mix_PlayChannel](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_28.html#SEC28)
--- * [Mix_Chunk](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_85.html#SEC85)
function Nene.MixWrapper.play_channel(channel: cint, chunk: *Mix_Chunk, loop: cint): (cint, boolean)
  check(Nene.initialized, 'Nene is not initialized')
  check(chunk, 'chunk is nilptr')

  local channel = Mix_PlayChannel(channel, chunk, loop)
  local ok = channel ~= -1

  if not ok then
    ## Nene.macros.fn_warn_mix_error('Nene.MixWrapper.play_channel', 'could not play the chunk on the channel')
  end

  return channel, ok
end

--- Wrapper of `Mix_HaltChannel`
---
--- Stops the playing `channel`, if `-1` is passed, then it halts all channels.
---
--- Related SDL_mixer documentation:
--- * [Mix_HaltChannel](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_34.html#SEC34)
--- * [Mix_Chunk](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_85.html#SEC85)
function Nene.MixWrapper.halt_channel(channel: cint)
  check(Nene.initialized, 'Nene is not initialized')
  Mix_HaltChannel(channel)
end

--- Wrapper of `Mix_FreeChunk`
---
--- Stops the playing `channel`, if `-1` is passed, then it halts all channels.
---
--- Related SDL_mixer documentation:
--- * [Mix_FreeChunk](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_24.html#SEC24)
--- * [Mix_Chunk](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_85.html#SEC85)
function Nene.MixWrapper.free_chunk(chunk: *Mix_Chunk)
  check(Nene.initialized, 'Nene is not initialized')
  check(chunk, 'chunk is nilptr')
  Mix_FreeChunk(chunk)
end

-- ]] Mix_Chunk related functions ]]

-- [[ Mix_Music related functions [[

--- Wrapper of `Mix_FreeMusic`
---
--- Free the music memory.
---
--- Related SDL_mixer documentation:
--- * [Mix_FreeMusic](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_56.html#SEC56)
--- * [Mix_Music](https://www.libsdl.org/projects/SDL_mixer/docs/SDL_mixer_86.html#SEC86)
function Nene.MixWrapper.free_music(music: *Mix_Music)
  check(Nene.initialized, 'Nene is not initialized')
  check(music, 'music is nilptr')
  Mix_FreeMusic(music)
end

-- ]] Mix_Music related functions ]]
