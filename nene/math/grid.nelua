-- The grid module, used as a way to use grids mathematically.

-- Copyright (c) 2021-2022 Andr√© Luiz Alvares
-- Nene is licensed under the Zlib license.
-- Please refer to the LICENSE file for details
-- SPDX-License-Identifier: Zlib

local Rect = require 'nene.math.rect'
local Vec2i = require 'nene.math.vec2i'

-- This record is intended to generate rectangles from an infinite grid.
local Grid = @record{
  cell_size: Vec2i, -- size of the rectangles
  gap: Vec2i -- gap between rectagles
}

-- Generates the rectangle from the grid mathematically. Both the first `column` and `row` are `0` and not `1`.
function Grid.gen_rect(grid: Grid, column: integer, row: integer): Rect
  return (@Rect){
    x = grid.cell_size.x * column + grid.gap.x * column,
    y = grid.cell_size.y * row + grid.gap.y * row,
    w = grid.cell_size.x,
    h = grid.cell_size.y,
  }
end

--[[
Returns the the column and row from a `n`th cell, note that this function is 0-indexed (so, the first cell is `0`, not `1`).

Is necessary to also give how many cells fit on a line.
]]
function Grid.get_nth_cell_column_row(n: isize, cells_per_line: isize): (isize, isize)
  check(cells_per_line ~= 0, 'Cannot calculate row and column with 0 cells per line')
  return n % cells_per_line, n // cells_per_line
end

return Grid
