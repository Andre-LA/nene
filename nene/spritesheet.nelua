require 'hashmap'
require 'vector'

require 'nene.core'
require 'nene.colors'
require 'nene.math'
require 'nene.texture'

local Vec2, Rect, Grid = Math.Vec2, Math.Rect, Math.Grid

-- The `SpriteSheet` module is used to use and draw sprites.
global SpriteSheet = @record{
  grid: Grid,              -- spritesheet grid
  sprites_per_line: isize, -- how many sprites fit in a line of this grid
}

-- get the column and row of the grid from an index of this spritesheet.
function SpriteSheet:get_sprite_column_row(index: isize): (isize, isize)
  return Grid.get_nth_cell_column_row(index, self.sprites_per_line)
end

-- get the source get from the spritesheet at the column and row.
function SpriteSheet:get_source_rect(column: isize, row: isize)
  return self.grid:gen_rect(column, row)
end

-- draw the sprite from the spritesheet
function SpriteSheet:draw(nene: Nene, position: Vec2, spritesheet_texture: Texture, sprite_index: isize, color: facultative(Color))
  ## if color.type.is_niltype then
  local color = Color.Palette.white
  ## end

  local sprite_column, sprite_row = self:get_sprite_column_row(sprite_index)
  local sprite_source = self:get_source_rect(sprite_column, sprite_row)

  local destination: Rect = {
    x = math.ifloor(position.x),
    y = math.ifloor(position.y),
    w = sprite_source.w,
    h = sprite_source.h
  }

  spritesheet_texture:draw(nene, color, sprite_source, destination)
end
